services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: "2181"
      ZOOKEEPER_TICK_TIME: "2000"
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      zookeeper:
        condition: service_started
    environment:
      KAFKA_BROKER_ID: "1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
    ports:
      - "29092:29092"

  kafka-ui:
    image: kafbat/kafka-ui:latest
    depends_on:
      kafka:
        condition: service_started
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    ports:
      - "8085:8080"

  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: bankdb
      POSTGRES_USER: bank
      POSTGRES_PASSWORD: bank
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U bank"]
      interval: 1s
      timeout: 5s
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data

  accounts-service:
    build:
      context: ../accounts-service
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - kafka
      - postgres
    ports:
      - "8081:8081"

  payments-service:
    build:
      context: ../payments-service
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - kafka
      - postgres
    ports:
      - "8082:8082"

  notifications-service:
    build:
      context: ../notifications-service
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - kafka
    ports:
      - "8083:8083"

volumes:
  pgdata:
